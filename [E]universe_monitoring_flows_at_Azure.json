[
    {
        "id": "7a5c6b3ba24e3bd5",
        "type": "tab",
        "label": "DMBS 상태 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c045d8d63dce5a0",
        "type": "tab",
        "label": "네트워크 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "25aca8f1576ffb06",
        "type": "tab",
        "label": "CPU & Memory 사용량 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d4889308a1075d8",
        "type": "tab",
        "label": "디스크 사용량 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "961da8a4aeb428f0",
        "type": "tab",
        "label": "프로세스 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "57ab0c9b346de2ed",
        "type": "tab",
        "label": "batch Job 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2653bd7cd837a84b",
        "type": "tab",
        "label": "Web Service Monitoring",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9dc7265f2f3bc81e",
        "type": "tab",
        "label": "[Raspberry Pi] 환경정보(온/습도) 모니터링",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db58ad1a.e37a8",
        "type": "ui_tab",
        "name": "Test stuff",
        "icon": "dashboard"
    },
    {
        "id": "6cc8c50b.445afc",
        "type": "ui_tab",
        "name": "NetWork Monitoring",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "85db27df95fe846f",
        "type": "ui_tab",
        "name": "CPU & Memory Monitoring",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "acf4e5d04a512aaa",
        "type": "ui_tab",
        "name": "Disk Usage Monitoring",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9ab9666cc2f8486d",
        "type": "ui_tab",
        "name": "Process Monitoring",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8fb9e0d415cc8d8f",
        "type": "ui_tab",
        "name": "Batch Job Monitoring",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "236322a0c18b0a94",
        "type": "ui_tab",
        "name": "[Raspberry Pi] 온/습도 센서 정보",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "94ef3efa.b0b16",
        "type": "ui_group",
        "name": "Network Monitoring",
        "tab": "6cc8c50b.445afc",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9cb3c925bbc49e3c",
        "type": "ui_group",
        "name": "CPU & Memory Usage Monitoring",
        "tab": "85db27df95fe846f",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "df911631a2db1bd2",
        "type": "ui_group",
        "name": "Disk Usage",
        "tab": "acf4e5d04a512aaa",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "656d05a00fec92ca",
        "type": "ui_group",
        "name": "Process Monitoring",
        "tab": "9ab9666cc2f8486d",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c27d34ccca1ec50f",
        "type": "ui_group",
        "name": "Batch Result",
        "tab": "8fb9e0d415cc8d8f",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "10da6039ba84f26d",
        "type": "ui_group",
        "name": "Sensor Monitoring",
        "tab": "236322a0c18b0a94",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7a3b3f5a641b3668",
        "type": "ui_spacer",
        "z": "25aca8f1576ffb06",
        "name": "spacer",
        "group": "9cb3c925bbc49e3c",
        "order": 2,
        "width": "10",
        "height": "1"
    },
    {
        "id": "4ac6ca9bbd925b10",
        "type": "ui_spacer",
        "z": "57ab0c9b346de2ed",
        "name": "spacer",
        "group": "c27d34ccca1ec50f",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "c009d14c8eb43423",
        "type": "ui_spacer",
        "z": "57ab0c9b346de2ed",
        "name": "spacer",
        "group": "c27d34ccca1ec50f",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "8fb8786426b973b6",
        "type": "ui_spacer",
        "z": "57ab0c9b346de2ed",
        "name": "spacer",
        "group": "c27d34ccca1ec50f",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "aef6b30218264022",
        "type": "ui_spacer",
        "z": "57ab0c9b346de2ed",
        "name": "spacer",
        "group": "c27d34ccca1ec50f",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "997da0453fa3c63f",
        "type": "ui_spacer",
        "z": "57ab0c9b346de2ed",
        "name": "spacer",
        "group": "c27d34ccca1ec50f",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "752f2c7d28058321",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#00a3cc",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#00a3cc",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1ad1ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#00a3cc",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY/MM/DD",
            "sizes": {
                "sx": 48,
                "sy": 64,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a844720c.608d6",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "NODERED",
        "tz": "",
        "charset": ""
    },
    {
        "id": "5889e5dee6f564f9",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "86ab4360.50c6c",
        "type": "function",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Criteria",
        "func": "var timeE = msg.payload;\n//Restrict the query to pull the last 24hrs\n//of data instead of the whole db\nmsg.payload = (timeE - (1000*60*60*24));\n    node.status({text:msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "308dd6b1.2a193a"
            ]
        ]
    },
    {
        "id": "11c8f8a2.d97147",
        "type": "template",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Format query 2",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n CEILING(time/3600000)*3600000 AS timestamp,\n AVG(data1) AS `data1`,\n AVG(data2) AS `data2`\nFROM NODERED_PERFTEST\nWHERE time > {{payload}}\nGROUP BY `timestamp`;",
        "output": "str",
        "x": 500,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "272494b.eb3d36c",
        "type": "inject",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Timestamp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "86ab4360.50c6c"
            ]
        ]
    },
    {
        "id": "755e08a5.08de88",
        "type": "comment",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Flow to query database and format for chart",
        "info": "",
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "d59a31e8.d3772",
        "type": "template",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Format data",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO `NODERED_PERFTEST` VALUES ({{data1}},{{data2}},{{time}})",
        "output": "str",
        "x": 481,
        "y": 180,
        "wires": [
            [
                "433d9ca4.076774"
            ]
        ]
    },
    {
        "id": "2b71188f.3e2428",
        "type": "comment",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Flow to insert data into the database",
        "info": "",
        "x": 320,
        "y": 120,
        "wires": []
    },
    {
        "id": "308dd6b1.2a193a",
        "type": "template",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Format query 1",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT data1,data2, time as timestamp FROM NODERED_PERFTEST WHERE time > {{payload}}",
        "output": "str",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "2a63c806.ae4db8"
            ]
        ]
    },
    {
        "id": "a6de14220709a393",
        "type": "inject",
        "z": "7a5c6b3ba24e3bd5",
        "name": "",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "c17b52ea100f8680"
            ]
        ]
    },
    {
        "id": "c17b52ea100f8680",
        "type": "function",
        "z": "7a5c6b3ba24e3bd5",
        "name": "function 1",
        "func": "msg.data1 = Math.floor(Math.random() * 100);\nmsg.data2 = Math.floor(Math.random() * 100)\n//msg.timestamp = 'NOW()';\n\n//console.log(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "d59a31e8.d3772"
            ]
        ]
    },
    {
        "id": "f0d4fb4b33cbe647",
        "type": "catch",
        "z": "7a5c6b3ba24e3bd5",
        "name": "",
        "scope": [
            "2a63c806.ae4db8",
            "433d9ca4.076774"
        ],
        "uncaught": false,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "ac324bcdd345093b",
                "44736db9232f8d28"
            ]
        ]
    },
    {
        "id": "ac324bcdd345093b",
        "type": "debug",
        "z": "7a5c6b3ba24e3bd5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 480,
        "wires": []
    },
    {
        "id": "44736db9232f8d28",
        "type": "function",
        "z": "7a5c6b3ba24e3bd5",
        "name": "Error Message 치환",
        "func": "msg.topic = \"DBMS 오류 발생 알림\";\n\n//var today = new Date();\n//today.setHours(today.getHours() + 9);\n//msg.payload = msg.payload.replace(/time/g, today.toISOString());\n\nmsg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "5da39ab8e6f63472"
            ]
        ]
    },
    {
        "id": "5da39ab8e6f63472",
        "type": "e-mail",
        "z": "7a5c6b3ba24e3bd5",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "aurakim24@gmail.com",
        "dname": "",
        "x": 620,
        "y": 580,
        "wires": []
    },
    {
        "id": "2a63c806.ae4db8",
        "type": "mysql",
        "z": "7a5c6b3ba24e3bd5",
        "mydb": "a844720c.608d6",
        "name": "MYSQL",
        "x": 658,
        "y": 349,
        "wires": [
            []
        ]
    },
    {
        "id": "433d9ca4.076774",
        "type": "mysql",
        "z": "7a5c6b3ba24e3bd5",
        "mydb": "a844720c.608d6",
        "name": "MYSQL",
        "x": 634,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "222b911b.7f483e",
        "type": "exec",
        "z": "7c045d8d63dce5a0",
        "command": "ping -c 1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "6c078f6a.20f33"
            ],
            [
                "835178d3.275268"
            ],
            [
                "15d9eea6.b13c31"
            ]
        ]
    },
    {
        "id": "3569dd52.27fd92",
        "type": "inject",
        "z": "7c045d8d63dce5a0",
        "name": "*** Setup devices to ping here ***",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"name\":\"service 1\",\"ip\":\"127.0.0.1\"},{\"name\":\"serivce 2\",\"ip\":\"192.168.96.173\"},{\"name\":\"service 3\",\"ip\":\"www.naver.com\"},{\"name\":\"service 4\",\"ip\":\"www.chosun.com\"}]",
        "payloadType": "json",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "935ef4ca.1414c8"
            ]
        ]
    },
    {
        "id": "935ef4ca.1414c8",
        "type": "split",
        "z": "7c045d8d63dce5a0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "801f89e0.5a45e8"
            ]
        ]
    },
    {
        "id": "6c078f6a.20f33",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "update thisPing",
        "func": "\nmsg.thisPing.timestamp = new Date();\nmsg.thisPing.message = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 260,
        "wires": [
            [
                "8d1f2fa0.953ce",
                "38217bfa.ebbcd4"
            ]
        ]
    },
    {
        "id": "835178d3.275268",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "update thisPing",
        "func": "\nmsg.thisPing.timestamp = new Date();\nmsg.thisPing.message = msg.payload;\nmsg.thisPing.error = true;\nmsg.thisPing.state = 'ng'\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 300,
        "wires": [
            [
                "682780dd.070e3",
                "38217bfa.ebbcd4"
            ]
        ]
    },
    {
        "id": "15d9eea6.b13c31",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "update thisPing",
        "func": "msg.thisPing.timestamp = new Date();\nmsg.thisPing.result = msg.payload;\nmsg.thisPing.error = msg.payload.code !== 0;\nmsg.thisPing.state = msg.thisPing.error === false ? \"ok\" : \"ng\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "705d8927.7a4068",
                "38217bfa.ebbcd4"
            ]
        ]
    },
    {
        "id": "801f89e0.5a45e8",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "Init thisPing",
        "func": "let pingResults = flow.get(\"pingResults\") || {}\nmsg.thisPing = pingResults[msg.topic] || {};\n\nmsg.thisPing.name = msg.payload.name;\nmsg.thisPing.ip = msg.payload.ip;\nmsg.thisPing.timestamp = new Date();\nmsg.thisPing.result = '';\nmsg.thisPing.error = null;\nmsg.thisPing.state = 'pinging';\n\nmsg.topic = msg.thisPing.name;\nmsg.payload = msg.thisPing.ip;\n\npingResults[msg.topic] = msg.thisPing;//store ping obj in pingResults\nflow.set(\"pingResults\",pingResults);//save pingResults in flow context\n\nconsole.log(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "222b911b.7f483e",
                "460bf53.537a60c"
            ]
        ]
    },
    {
        "id": "460bf53.537a60c",
        "type": "debug",
        "z": "7c045d8d63dce5a0",
        "name": "msg_first",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "8d1f2fa0.953ce",
        "type": "debug",
        "z": "7c045d8d63dce5a0",
        "name": "msg_normal_output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 260,
        "wires": []
    },
    {
        "id": "682780dd.070e3",
        "type": "debug",
        "z": "7c045d8d63dce5a0",
        "name": "msg_error_output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "705d8927.7a4068",
        "type": "debug",
        "z": "7c045d8d63dce5a0",
        "name": "msg_return_code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "38217bfa.ebbcd4",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "Update flow context",
        "func": "let pingResults = flow.get(\"pingResults\") || {}\nlet thisPing = msg.thisPing;\n\n//store ping item\npingResults[thisPing.name] = thisPing;\n\n//save pingResults in flow context\nflow.set(\"pingResults\",pingResults);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c2440a8c.cf9c38",
        "type": "template",
        "z": "7c045d8d63dce5a0",
        "name": "build html table",
        "field": "html",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<table width=\"100%\">\n  <tr>\n    <th>Name</th>\n    <th>IP</th> \n    <th>Status</th> \n  </tr>\n  {{#tableData}}\n  <tr class='{{rowclass}}'>\n    <td>{{{name}}}</td>\n    <td>{{ip}}</td> \n    <td>{{{stateInfo}}}</i></td> \n  </tr>\n  {{/tableData}}\n</table>",
        "x": 600,
        "y": 520,
        "wires": [
            [
                "81fa405b.5c169",
                "2fdd97a9.33a278"
            ]
        ]
    },
    {
        "id": "81fa405b.5c169",
        "type": "debug",
        "z": "7c045d8d63dce5a0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "5cb5897e.9faec8",
        "type": "inject",
        "z": "7c045d8d63dce5a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"name\":\"service 1\",\"ip\":\"127.0.0.1\"},{\"name\":\"serivce 2\",\"ip\":\"192.168.96.173\"},{\"name\":\"service 3\",\"ip\":\"www.naver.com\"},{\"name\":\"service 4\",\"ip\":\"www.chosun.com\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "5cef1fce.0085d"
            ]
        ]
    },
    {
        "id": "5cef1fce.0085d",
        "type": "function",
        "z": "7c045d8d63dce5a0",
        "name": "convert pingResults to array",
        "func": "let pingResults = flow.get(\"pingResults\") || {}\n\nlet tableData = [];\nfor (let k in pingResults) {\n    let r = pingResults[k];\n    if(r.state == \"ok\"){\n        r.rowclass = \"good\";\n        r.stateInfo = '<i class=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> OK'\n    } else if(r.state == \"ng\") {\n         r.rowclass = \"bad\";\n        r.stateInfo = '<i class=\"fa fa-thumbs-down\" aria-hidden=\"true\"></i> NG'\n    } else {\n        r.rowclass = \"unknown\";\n        r.stateInfo = '<i class=\"fa question\" aria-hidden=\"true\"></i> Unknown'\n    }\n  tableData.push(r);\n}\n\n//console.log(tableData);\n\nmsg.tableData = tableData\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "c2440a8c.cf9c38"
            ]
        ]
    },
    {
        "id": "2fdd97a9.33a278",
        "type": "ui_template",
        "z": "7c045d8d63dce5a0",
        "group": "94ef3efa.b0b16",
        "name": "",
        "order": 1,
        "width": 11,
        "height": 5,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */    \n\ntr.good {\n    color: green;\n}\n\ntr.bad {\n    color: red;\n}\n\ntr.unknown {\n    color: orange;\n}\n\n    \n</style>\n<div ng-bind-html=\"msg.html\"></div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "84ebfa94f3582832",
        "type": "exec",
        "z": "25aca8f1576ffb06",
        "command": "awk '{u=$2+$4; t=$2+$4+$5; if (NR==1){u1=u; t1=t;} else print ($2+$4-u1) * 100 / (t-t1); }' <(grep 'cpu ' /proc/stat) <(sleep 1;grep 'cpu ' /proc/stat)",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "oldrc": false,
        "name": "cpu usage command",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "62024ff29ee5d440"
            ],
            [],
            []
        ]
    },
    {
        "id": "2a24011a4cb4427e",
        "type": "inject",
        "z": "25aca8f1576ffb06",
        "name": "*** Setup resources to fetch here ***",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"name\":\"cpu\"},{\"name\":\"mem\"}]",
        "payloadType": "json",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "36cbddb1a4081653"
            ]
        ]
    },
    {
        "id": "36cbddb1a4081653",
        "type": "split",
        "z": "25aca8f1576ffb06",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "05125168863f504c"
            ]
        ]
    },
    {
        "id": "62024ff29ee5d440",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "update thisRsm",
        "func": "\nmsg.thisRsm.timestamp = new Date();\nmsg.thisRsm.message = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 380,
        "wires": [
            [
                "77ed2c1d410fc5b1",
                "b012295091bf24b7"
            ]
        ]
    },
    {
        "id": "25c0966d7dac82b0",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "update thisRsm",
        "func": "\nmsg.thisRsm.timestamp = new Date();\nmsg.thisRsm.message = msg.payload;\nmsg.thisRsm.error = true;\nmsg.thisRsm.state = 'ng'\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 420,
        "wires": [
            [
                "91a25ee3c600631c",
                "b012295091bf24b7"
            ]
        ]
    },
    {
        "id": "27ff76d47df4c24d",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "update thisRsm",
        "func": "msg.thisRsm.timestamp = new Date();\nmsg.thisRsm.result = msg.payload;\nmsg.thisRsm.error = msg.payload.code !== 0;\nmsg.thisRsm.state = msg.thisRsm.error === false ? \"ok\" : \"ng\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 460,
        "wires": [
            [
                "89a1c76172ae9077",
                "b012295091bf24b7"
            ]
        ]
    },
    {
        "id": "05125168863f504c",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "Init thisRsm",
        "func": "let rsmResults = flow.get(\"rsmResults\") || {}\nmsg.thisRsm = rsmResults[msg.topic] || {};\n\nmsg.thisRsm.name = msg.payload.name;\nmsg.thisRsm.timestamp = new Date();\nmsg.thisRsm.result = '';\nmsg.thisRsm.error = null;\nmsg.thisRsm.state = 'fetching';\n\nmsg.topic = msg.thisRsm.name;\n\nrsmResults[msg.topic] = msg.thisRsm;//store ping obj in rsmResults\nflow.set(\"rsmResults\",rsmResults);//save rsmResults in flow context\n\nconsole.log(msg.payload.name);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "d0957d41a2040121",
                "5ebff1811b1c7989"
            ]
        ]
    },
    {
        "id": "d0957d41a2040121",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "msg_first",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "77ed2c1d410fc5b1",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "msg_normal_output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 380,
        "wires": []
    },
    {
        "id": "91a25ee3c600631c",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "msg_error_output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "89a1c76172ae9077",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "msg_return_code",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 460,
        "wires": []
    },
    {
        "id": "b012295091bf24b7",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "Update flow context",
        "func": "let rsmResults = flow.get(\"rsmResults\") || {}\nlet thisRsm = msg.thisRsm;\n\n//store ping item\nrsmResults[thisRsm.name] = thisRsm;\n\n//save rsmResults in flow context\nflow.set(\"rsmResults\",rsmResults);\n\n//console.log(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c532a7a545d852f5",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 640,
        "wires": []
    },
    {
        "id": "4cf86409606b47b5",
        "type": "inject",
        "z": "25aca8f1576ffb06",
        "name": "Inject",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 700,
        "wires": [
            [
                "417a547163c79289"
            ]
        ]
    },
    {
        "id": "417a547163c79289",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "convert rmsResults to array",
        "func": "let rsmResults = flow.get(\"rsmResults\") || {}\n\nlet tempVal = \"0\";\nlet resourcesData = [];\n\nfor (let k in rsmResults) {\n\n    let r = rsmResults[k];\n    \n    if(r.name == \"cpu\"){\n        \n        if (typeof r.message === \"string\") \n        tempVal = r.message.replace(/\\n/g,\" \").trim();\n        \n        console.log(\"cpuTempval = \" + Math.round(tempVal*100)/100);\n        \n        r.payload = Math.round((tempVal*100)/100);\n    \n        \n    } else if(r.name == \"mem\") {\n        \n        if (typeof r.message === \"string\") \n        tempVal = r.message.trim();\n         \n        console.log(\"memTempval = \" + tempVal);\n        \n        var m = {};\n        m.labels = [\"used\", \"fee\"];\n        m.data = [[tempVal, 100 - tempVal]];\n        m.series = [\"mem\"];\n        \n        r.payload = [m];\n    }\n    \n    resourcesData.push(r);\n}\n\nmsg.resourcesData = resourcesData;\n\nconsole.log(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 700,
        "wires": [
            [
                "c532a7a545d852f5",
                "6551bbb8e647ca29",
                "a7b2800121dbda0d"
            ]
        ]
    },
    {
        "id": "5ebff1811b1c7989",
        "type": "switch",
        "z": "25aca8f1576ffb06",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "cpu",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mem",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "84ebfa94f3582832"
            ],
            [
                "f6efd4eb3ab316c2"
            ]
        ]
    },
    {
        "id": "f6efd4eb3ab316c2",
        "type": "exec",
        "z": "25aca8f1576ffb06",
        "command": "free | grep Mem | awk '{print $3/$2 * 100.0}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "oldrc": false,
        "name": "memory usage command",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "62024ff29ee5d440"
            ],
            [],
            []
        ]
    },
    {
        "id": "19482ce7fb8d3bd1",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 720,
        "wires": []
    },
    {
        "id": "fba99b0d55074ba0",
        "type": "debug",
        "z": "25aca8f1576ffb06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 800,
        "wires": []
    },
    {
        "id": "6551bbb8e647ca29",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "cpu filter",
        "func": "return msg.resourcesData[0];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 760,
        "wires": [
            [
                "19482ce7fb8d3bd1",
                "c0cefaaf14366e1f"
            ]
        ]
    },
    {
        "id": "a7b2800121dbda0d",
        "type": "function",
        "z": "25aca8f1576ffb06",
        "name": "memory filter",
        "func": "return msg.resourcesData[1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 800,
        "wires": [
            [
                "fba99b0d55074ba0",
                "501c2627ceec382c"
            ]
        ]
    },
    {
        "id": "c0cefaaf14366e1f",
        "type": "ui_chart",
        "z": "25aca8f1576ffb06",
        "name": "",
        "group": "9cb3c925bbc49e3c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "CPU Usage Chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "501c2627ceec382c",
        "type": "ui_chart",
        "z": "25aca8f1576ffb06",
        "name": "",
        "group": "9cb3c925bbc49e3c",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "memory usage chart",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "a1da11fa3473925a",
        "type": "exec",
        "z": "8d4889308a1075d8",
        "command": "df -Ph | awk -f /home/azureuser/.node-red/stat.awk",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "oldrc": false,
        "name": "Get Disk Usages",
        "x": 290,
        "y": 360,
        "wires": [
            [
                "6ddb622a9b017844"
            ],
            [],
            []
        ]
    },
    {
        "id": "6ddb622a9b017844",
        "type": "function",
        "z": "8d4889308a1075d8",
        "name": "update msg",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 260,
        "wires": [
            [
                "fb3249832bbf2716",
                "d00a43a807074606"
            ]
        ]
    },
    {
        "id": "fb3249832bbf2716",
        "type": "debug",
        "z": "8d4889308a1075d8",
        "name": "msg_normal_output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 260,
        "wires": []
    },
    {
        "id": "efebe666fce1d643",
        "type": "debug",
        "z": "8d4889308a1075d8",
        "name": "msg_error_output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "d77c23f878f040e9",
        "type": "debug",
        "z": "8d4889308a1075d8",
        "name": "msg_return_code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "82ecb774f15672f5",
        "type": "ui_button",
        "z": "8d4889308a1075d8",
        "name": "Refresh",
        "group": "df911631a2db1bd2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "retrieve latest info.",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "a1da11fa3473925a"
            ]
        ]
    },
    {
        "id": "d00a43a807074606",
        "type": "ui_template",
        "z": "8d4889308a1075d8",
        "group": "df911631a2db1bd2",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n\n</style>\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d10697c296533a88",
        "type": "exec",
        "z": "961da8a4aeb428f0",
        "command": "ps aux | awk -f /home/azureuser/.node-red/stat_p.awk",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "oldrc": false,
        "name": "Get Process Info",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "42bfe7d40d860eb7"
            ],
            [],
            []
        ]
    },
    {
        "id": "42bfe7d40d860eb7",
        "type": "function",
        "z": "961da8a4aeb428f0",
        "name": "update msg",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 240,
        "wires": [
            [
                "9e61604efac7bfcf",
                "2c963c3f1e3c4182"
            ]
        ]
    },
    {
        "id": "9e61604efac7bfcf",
        "type": "debug",
        "z": "961da8a4aeb428f0",
        "name": "msg_normal_output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "e93d91c1b0182986",
        "type": "inject",
        "z": "961da8a4aeb428f0",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "d10697c296533a88"
            ]
        ]
    },
    {
        "id": "8e012bf4451cb8f5",
        "type": "ui_button",
        "z": "961da8a4aeb428f0",
        "name": "Refresh",
        "group": "656d05a00fec92ca",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "retrieve latest info.",
        "color": "white",
        "bgcolor": "grey",
        "className": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "d10697c296533a88"
            ]
        ]
    },
    {
        "id": "2c963c3f1e3c4182",
        "type": "ui_template",
        "z": "961da8a4aeb428f0",
        "group": "656d05a00fec92ca",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\ntable {\n    color: #000;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 1;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\ntd {\n    background: #000000;\n    /* Darken header a bit */\n    color : white; \n}\n\n.red {\n    background: #FF0000;\n    /* Darken header a bit */\n    color : white; \n}\n\n\n</style>\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "96a4003769b104e6",
        "type": "debug",
        "z": "57ab0c9b346de2ed",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa46da0744e0d6f8",
        "type": "watch",
        "z": "57ab0c9b346de2ed",
        "name": "batchjobs inspect",
        "files": "/home/azureuser/.node-red/batchjob/",
        "recursive": true,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "96a4003769b104e6",
                "870137e0ac96e0f9"
            ]
        ]
    },
    {
        "id": "870137e0ac96e0f9",
        "type": "switch",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "job1.sh.log",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "job2.sh.log",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "job3.sh.log",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "job4.sh.log",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "job5.sh.log",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 310,
        "y": 360,
        "wires": [
            [
                "caf19583388b6467",
                "32a6907701225975"
            ],
            [
                "e06357fc383730c2",
                "f41cf2450394d36f"
            ],
            [
                "d599f5e922e23413",
                "d552a0baece80502"
            ],
            [
                "d100930594ba23ad",
                "0bfced5915aa3e47"
            ],
            [
                "0d77a95f34a30860",
                "059200e3d003f1bb"
            ]
        ]
    },
    {
        "id": "32a6907701225975",
        "type": "file in",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "0c2c98ec1bb8ca60"
            ]
        ]
    },
    {
        "id": "f41cf2450394d36f",
        "type": "file in",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 480,
        "wires": [
            [
                "7116b695ca0b4881"
            ]
        ]
    },
    {
        "id": "7116b695ca0b4881",
        "type": "change",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "str",
                "to": "<p>result : <span class=spfalse>false</span>.  [ time ]</p></p>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "str",
                "to": "<p>result : <span class=sptrue>true</span>.  [ time ]</p></p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 480,
        "wires": [
            [
                "e95e11e7f22c11bb"
            ]
        ]
    },
    {
        "id": "0c2c98ec1bb8ca60",
        "type": "change",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "str",
                "to": "<p>result : <span class=spfalse>false</span>. [ time ]</p>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "str",
                "to": "<p>result : <span class=sptrue>true</span>. [ time ]</p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "0d12095de46c5263"
            ]
        ]
    },
    {
        "id": "0d12095de46c5263",
        "type": "function",
        "z": "57ab0c9b346de2ed",
        "name": "function 1",
        "func": "msg.topic = \"batch job 1의 동작 결과\";\n\nvar today = new Date();\ntoday.setHours(today.getHours() + 9);\n\nmsg.payload = msg.payload.replace(/time/g, today.toISOString());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": [
            [
                "1719fb1155ecdaa8",
                "6ce6fa301c20f0ee"
            ]
        ]
    },
    {
        "id": "e95e11e7f22c11bb",
        "type": "function",
        "z": "57ab0c9b346de2ed",
        "name": "function 2",
        "func": "msg.topic = \"batch job 2의 동작 결과\";\n\nvar today = new Date();\ntoday.setHours(today.getHours() + 9);\n\nmsg.payload = msg.payload.replace(/time/g, today.toISOString());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 480,
        "wires": [
            [
                "ca056075d190e5a2",
                "6ce6fa301c20f0ee"
            ]
        ]
    },
    {
        "id": "d552a0baece80502",
        "type": "file in",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 560,
        "wires": [
            [
                "e923db912b244bc3"
            ]
        ]
    },
    {
        "id": "0bfced5915aa3e47",
        "type": "file in",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 640,
        "wires": [
            [
                "bf87c6082c2992bf"
            ]
        ]
    },
    {
        "id": "bf87c6082c2992bf",
        "type": "change",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "str",
                "to": "<p>result : <span class=spfalse>false</span>.  [ time ]</p></p>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "str",
                "to": "<p>result : <span class=sptrue>true</span>.  [ time ]</p></p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 640,
        "wires": [
            [
                "0a59a92f3e580362"
            ]
        ]
    },
    {
        "id": "e923db912b244bc3",
        "type": "change",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "str",
                "to": "<p>result : <span class=spfalse>false</span>. [ time ]</p>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "str",
                "to": "<p>result : <span class=sptrue>true</span>. [ time ]</p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 560,
        "wires": [
            [
                "4191874aab2d0fcc"
            ]
        ]
    },
    {
        "id": "4191874aab2d0fcc",
        "type": "function",
        "z": "57ab0c9b346de2ed",
        "name": "function 3",
        "func": "msg.topic = \"batch job 3의 동작 결과\";\n\nvar today = new Date();\ntoday.setHours(today.getHours() + 9);\n\nmsg.payload = msg.payload.replace(/time/g, today.toISOString());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 560,
        "wires": [
            [
                "40b837e74d37cc2f",
                "6ce6fa301c20f0ee"
            ]
        ]
    },
    {
        "id": "0a59a92f3e580362",
        "type": "function",
        "z": "57ab0c9b346de2ed",
        "name": "function 4",
        "func": "msg.topic = \"batch job 4의 동작 결과\";\n\nvar today = new Date();\ntoday.setHours(today.getHours() + 9);\n\nmsg.payload = msg.payload.replace(/time/g, today.toISOString());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 640,
        "wires": [
            [
                "9b01bbef1f23e7a8",
                "6ce6fa301c20f0ee"
            ]
        ]
    },
    {
        "id": "059200e3d003f1bb",
        "type": "file in",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 720,
        "wires": [
            [
                "7ef5505ff187015c"
            ]
        ]
    },
    {
        "id": "7ef5505ff187015c",
        "type": "change",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "str",
                "to": "<p>result : <span class=spfalse>false</span>.  [ time ]</p></p>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "str",
                "to": "<p>result : <span class=sptrue>true</span>.  [ time ]</p></p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 720,
        "wires": [
            [
                "c32eeac6414f8bd5"
            ]
        ]
    },
    {
        "id": "c32eeac6414f8bd5",
        "type": "function",
        "z": "57ab0c9b346de2ed",
        "name": "function 5",
        "func": "msg.topic = \"batch job 5\";\n\nvar today = new Date();\ntoday.setHours(today.getHours() + 9);\n\nmsg.payload = msg.payload.replace(/time/g, today.toISOString());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 720,
        "wires": [
            [
                "22b6e07234b48751",
                "6ce6fa301c20f0ee"
            ]
        ]
    },
    {
        "id": "634232975f7c4caf",
        "type": "comment",
        "z": "57ab0c9b346de2ed",
        "name": "batch job 결과를 저장하고 있는 로그파일의 결과를 모니터링하여 결과를 dashboard 형태로 보여주고, 문제가 발생했을 경우 관제",
        "info": "",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "b3019711f6af0436",
        "type": "comment",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "info": "",
        "x": 360,
        "y": 300,
        "wires": []
    },
    {
        "id": "6ce6fa301c20f0ee",
        "type": "e-mail",
        "z": "57ab0c9b346de2ed",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "cherry24mint@naver.com",
        "dname": "",
        "x": 930,
        "y": 820,
        "wires": []
    },
    {
        "id": "24321426f9e3ce75",
        "type": "ui_date_picker",
        "z": "57ab0c9b346de2ed",
        "name": "",
        "label": "Date",
        "group": "c27d34ccca1ec50f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "caf19583388b6467",
        "type": "ui_text",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "job1",
        "label": "1. job1.sh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 360,
        "wires": []
    },
    {
        "id": "e06357fc383730c2",
        "type": "ui_text",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "job2",
        "label": "2. job2.sh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 440,
        "wires": []
    },
    {
        "id": "d599f5e922e23413",
        "type": "ui_text",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "job3",
        "label": "3. job3.sh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 520,
        "wires": []
    },
    {
        "id": "d100930594ba23ad",
        "type": "ui_text",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "order": 11,
        "width": 10,
        "height": 1,
        "name": "job4",
        "label": "4. job4.sh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "0d77a95f34a30860",
        "type": "ui_text",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "order": 14,
        "width": 10,
        "height": 1,
        "name": "job5",
        "label": "5. job5.sh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "ca056075d190e5a2",
        "type": "ui_template",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "name": "job2 result",
        "order": 6,
        "width": 6,
        "height": 1,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n.spfalse {\n    color: #FF0000;\n    font-weight: bold;\n}\n.sptrue {\n    color: #0000FF;\n    font-weight: bold;\n}\n\n</style>\n\n<div style=\"display: table; height: 400px; overflow: hidden;\">\n  <div style=\"display: table-cell; vertical-align: middle;\">\n   <div ng-bind-html=\"msg.payload\"></div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "1719fb1155ecdaa8",
        "type": "ui_template",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "name": "job1 result",
        "order": 3,
        "width": 6,
        "height": 1,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n.spfalse {\n    color: #FF0000;\n    font-weight: bold;\n\n}\n.sptrue {\n    color: #0000FF;\n    font-weight: bold;\n}\n\n\n</style>\n\n<div style=\"display: table; height: 400px; overflow: hidden;\">\n  <div style=\"display: table-cell; vertical-align: middle;\">\n   <div ng-bind-html=\"msg.payload\"></div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "9b01bbef1f23e7a8",
        "type": "ui_template",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "name": "job4 result",
        "order": 12,
        "width": 6,
        "height": 1,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n.spfalse {\n    color: #FF0000;\n    font-weight: bold;\n}\n.sptrue {\n    color: #0000FF;\n    font-weight: bold;\n}\n\n</style>\n\n<div style=\"display: table; height: 400px; overflow: hidden;\">\n  <div style=\"display: table-cell; vertical-align: middle;\">\n   <div ng-bind-html=\"msg.payload\"></div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "40b837e74d37cc2f",
        "type": "ui_template",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "name": "job3 result",
        "order": 9,
        "width": 6,
        "height": 1,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n.spfalse {\n    color: #FF0000;\n    font-weight: bold;\n\n}\n.sptrue {\n    color: #0000FF;\n    font-weight: bold;\n}\n\n\n</style>\n\n<div style=\"display: table; height: 400px; overflow: hidden;\">\n  <div style=\"display: table-cell; vertical-align: middle;\">\n   <div ng-bind-html=\"msg.payload\"></div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "22b6e07234b48751",
        "type": "ui_template",
        "z": "57ab0c9b346de2ed",
        "group": "c27d34ccca1ec50f",
        "name": "job5 result",
        "order": 15,
        "width": 6,
        "height": 1,
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\n\n.spfalse {\n    color: #FF0000;\n    font-weight: bold;\n}\n.sptrue {\n    color: #0000FF;\n    font-weight: bold;\n}\n\n</style>\n\n<div style=\"display: table; height: 400px; overflow: hidden;\">\n  <div style=\"display: table-cell; vertical-align: middle;\">\n   <div ng-bind-html=\"msg.payload\"></div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "30d89b3f2a338dcf",
        "type": "http request",
        "z": "2653bd7cd837a84b",
        "name": "normal state",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8082",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "1771c172fca437ba"
            ]
        ]
    },
    {
        "id": "1b92f50c3359469f",
        "type": "inject",
        "z": "2653bd7cd837a84b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "a34e5dd89e9a3291"
            ]
        ]
    },
    {
        "id": "98b9254a3bf979dd",
        "type": "switch",
        "z": "2653bd7cd837a84b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "30d89b3f2a338dcf"
            ],
            [
                "a07e0e37ddfc98ca"
            ]
        ]
    },
    {
        "id": "a07e0e37ddfc98ca",
        "type": "http request",
        "z": "2653bd7cd837a84b",
        "name": "abnormal state(500)",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8082/index_abnorm.html",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "1771c172fca437ba"
            ]
        ]
    },
    {
        "id": "697551e6d48a76ec",
        "type": "function",
        "z": "2653bd7cd837a84b",
        "name": "문자열 패턴 분석",
        "func": "if(msg.payload.indexOf('maker') == -1 ){\n\nmsg.topic = \"website 동작 이상 탐지 알림\";\n\n//console.log(\"if test : \", msg.payload.indexOf('maker'));\n\n}\n\nconsole.log(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "f6826b9bc7a0a83b",
                "adbe28899acca2f9"
            ]
        ]
    },
    {
        "id": "1771c172fca437ba",
        "type": "html",
        "z": "2653bd7cd837a84b",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "title",
        "ret": "html",
        "as": "single",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "697551e6d48a76ec"
            ]
        ]
    },
    {
        "id": "f6826b9bc7a0a83b",
        "type": "debug",
        "z": "2653bd7cd837a84b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 380,
        "wires": []
    },
    {
        "id": "adbe28899acca2f9",
        "type": "switch",
        "z": "2653bd7cd837a84b",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "17a2ca5f4f1c3d6f"
            ]
        ]
    },
    {
        "id": "5f01f7039c3ce030",
        "type": "comment",
        "z": "2653bd7cd837a84b",
        "name": "HTTP Request Node를 이용한 Web Service Monitoring(문자열 패턴)",
        "info": "",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "17a2ca5f4f1c3d6f",
        "type": "e-mail",
        "z": "2653bd7cd837a84b",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "cherry24mint@naver.com",
        "dname": "",
        "x": 770,
        "y": 540,
        "wires": []
    },
    {
        "id": "a34e5dd89e9a3291",
        "type": "random",
        "z": "2653bd7cd837a84b",
        "name": "",
        "low": "0",
        "high": "1",
        "inte": "true",
        "property": "payload",
        "x": 220,
        "y": 320,
        "wires": [
            [
                "98b9254a3bf979dd"
            ]
        ]
    },
    {
        "id": "f2afb0ccafe2ad31",
        "type": "function",
        "z": "9dc7265f2f3bc81e",
        "name": "Huminity",
        "func": "var hum = msg.payload\n\nvar result = hum.split(',')[0]\n// result = result / 100;\nvar result1 = { payload: result };\nreturn [result1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 300,
        "wires": [
            [
                "e2cd6b1eba17c7e3",
                "7ed46bf2a5952325"
            ]
        ]
    },
    {
        "id": "e2cd6b1eba17c7e3",
        "type": "debug",
        "z": "9dc7265f2f3bc81e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "ce50da6ff90022fd",
        "type": "function",
        "z": "9dc7265f2f3bc81e",
        "name": "Temp",
        "func": "var temp = msg.payload\n\nvar result = temp.split(',')[1]\n// result = result / 100;\nvar result1 = { payload: result };\nreturn [result1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "22d7f9a5af5b0ba2",
                "56d78277cd688a3a"
            ]
        ]
    },
    {
        "id": "22d7f9a5af5b0ba2",
        "type": "debug",
        "z": "9dc7265f2f3bc81e",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 460,
        "wires": []
    },
    {
        "id": "7ed46bf2a5952325",
        "type": "ui_gauge",
        "z": "9dc7265f2f3bc81e",
        "name": "",
        "group": "10da6039ba84f26d",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "습도",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "56d78277cd688a3a",
        "type": "ui_gauge",
        "z": "9dc7265f2f3bc81e",
        "name": "",
        "group": "10da6039ba84f26d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "온도",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "a26021b63f8b6119",
        "type": "serial in",
        "z": "9dc7265f2f3bc81e",
        "name": "",
        "serial": "5889e5dee6f564f9",
        "x": 250,
        "y": 300,
        "wires": [
            [
                "f2afb0ccafe2ad31",
                "ce50da6ff90022fd"
            ]
        ]
    }
]